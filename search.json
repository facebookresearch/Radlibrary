[{"path":[]},{"path":"https://facebookresearch.github.io/Radlibrary/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge make participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Code of Conduct","text":"Code Conduct applies within project spaces, also applies individual representing project community public spaces. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team opensource-conduct@fb.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to Radlibrary","title":"Contributing to Radlibrary","text":"want make contributing project easy transparent possible.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull Requests","title":"Contributing to Radlibrary","text":"actively welcome pull requests. Fork repo create branch master. ’ve added code tested, add tests. ’ve changed APIs, update documentation. Ensure test suite passes. Make sure code lints. haven’t already, complete Contributor License Agreement (“CLA”).","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CONTRIBUTING.html","id":"contributor-license-agreement-cla","dir":"","previous_headings":"","what":"Contributor License Agreement (“CLA”)","title":"Contributing to Radlibrary","text":"order accept pull request, need submit CLA. need work Facebook’s open source projects. Complete CLA : https://code.facebook.com/cla","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to Radlibrary","text":"use GitHub issues track public bugs. Please ensure description clear sufficient instructions able reproduce issue. Facebook bounty program safe disclosure security bugs. cases, please go process outlined page file public issue.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CONTRIBUTING.html","id":"coding-style","dir":"","previous_headings":"","what":"Coding Style","title":"Contributing to Radlibrary","text":"use tidyverse style guide. Use usethis::use_tidyverse_style() ensure code conforms style.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contributing to Radlibrary","text":"contributing Radlibrary, agree contributions licensed LICENSE file root directory source tree.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"","text":"vignette serves two distinct, related, purposes: document steps required get started Facebook Ad Library API. getting started Radlibrary package query, analyze, visualize data Facebook Ad Library API","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"getting-set-up","dir":"Articles","previous_headings":"","what":"Getting Set Up","title":"","text":"three basic steps required begin used Facebook Ad Library API. Confirm identity location Create Facebook Developer account Add new app","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"confirm-your-identity-and-location-with-facebook","dir":"Articles","previous_headings":"Getting Set Up","what":"Confirm your identity and location with Facebook","title":"","text":"Currently, accessing Facebook Ads API utilizes verification process required run ads social issues, elections politics. complete process, go ID section Facebook settings. complete process, need submit form national identification confirm identity. haven’t already confirmed ID, typically takes 1-2 days complete step. Note: identification need match physical location verification purposes.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"create-a-facebook-developer-account","dir":"Articles","previous_headings":"Getting Set Up","what":"Create a Facebook Developer account","title":"","text":"Visit Facebook Developers select Get Started sign developer account. part account creation, ’ll need agree Platform Policy.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"add-a-new-app","dir":"Articles","previous_headings":"Getting Set Up","what":"Add a new App","title":"","text":"account, ’ll need create new app. Go Explorer tool click “Create App” “Apps”. IMPORTANT NOTE ACCESS TOKENS Anyone obtains access token can use access Facebook account token expires. Treat access token password. Avoid putting source code, command history, especially GitHub somewhere else online.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"getting-started-with-radlibrary","dir":"Articles","previous_headings":"","what":"Getting Started with Radlibrary","title":"","text":"get started using Radlibrary package, ’ll want take following steps: Retrieve store access token Build query Submit query Analyze results","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"retrieve-and-store-your-access-token-","dir":"Articles","previous_headings":"Getting Started with Radlibrary","what":"Retrieve and store your access token.","title":"","text":"can find access token Graph API Explorer tool. Note token can used limited period time periodically refreshed. ’d like use Radlibrary functionality generate persistent token, see Generating persistent tokens. need long-term token, can save token environment. Note: best way store access token interactively use readline paste token prompt. way, access token won’t stored R history.","code":"## This will store your access token in your R history—not recommended! token <- \"PASTED VALUE FROM https://developers.facebook.com/tools/explorer/\"  ## better: token <- readline() # now paste at the prompt"},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"build-a-query","dir":"Articles","previous_headings":"Getting Started with Radlibrary","what":"Build a query","title":"","text":"Let’s build first query! ’ll start simple example. Let’s look active ads within United States served impressions past 90 days related health care. numerous parameters adlib_build_query function (, see ?adlib_build_query). , ’re passing five parameters: ad_reached_countries = 'US': tells query want return ads shown United States. Note query submission fail try submit ISO country code verified . ad_active_status = 'ACTIVE': tells query want return ads currently active. impression_condition = 'HAS_IMPRESSIONS_LAST_90_DAYS': tells query want see ad served impressions last 90 days. search_terms = \"healthcare\": search string query. Note: can search single keywords. example, can search “health care,” system search words separately (.e. “health” “care”). fields = \"ad_data\": fields include response. example, ’re looking strictly ad data. also search aggregated data related regional delivery demographics.","code":"query <- adlib_build_query(ad_reached_countries = 'US',  ad_active_status = 'ACTIVE',   search_terms = \"healthcare\", fields = \"ad_data\")"},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"submit-a-query","dir":"Articles","previous_headings":"Getting Started with Radlibrary","what":"Submit a query","title":"","text":"Let’s submit query previous section analysis. adlib_get() requires query token. return object type adlib_data_response contains ad data 1,000 rows matching query parameters. need retrieve 1,000 rows? , check Pagination section. data object numerous metadata attributes: date: time stamp query submission has_next: Boolean value indicating whether still pages available current search returned (see section pagination ) next_page: URL call next page responses fields: fields available query data: data returned.","code":"response <- adlib_get(params = query, token = token)"},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"analyze-the-results","dir":"Articles","previous_headings":"Getting Started with Radlibrary","what":"Analyze the results","title":"","text":"can convert results tibble using as_tibble: transform information stored data fields adlib_data_response tidy data frame (.e., tibble) analysis. example content : example - can display data visually. Let’s use ggplot2 visualize top 20 page names number ads created.","code":"results.tibble <- as_tibble(response, censor_access_token = TRUE) head(results.tibble) #  A tibble: 6 x 15 #  ad_creation_time    ad_creative_body ad_creative_lin… ad_creative_lin…  #  <dttm>              <chr>            <chr>            <chr>            # 1 2019-12-09 02:24:23 I believe in He… NA               NA               # 2 2019-12-09 00:24:56 Will you stand … act.actwireless… Legislators sho…  # 3 2019-12-08 22:23:09 \"https://youtu.… youtube.com      My name is Stev…  # 4 2019-12-08 22:22:36 Will you stand … act.actwireless… Legislators sho…  # 5 2019-12-08 21:53:34 \"Sen. Warren fl… ma.publiceditor… Sen. Warren is …  # 6 2019-12-08 21:45:55 \"Marvin Lim for… www.marvinlimfo… NA                # … with 11 more variables: ad_delivery_stop_time <dttm>, currency <chr> ... results.tibble %>%   group_by(page_name) %>%   select(page_name) %>%   summarize(n = n()) %>%   ungroup() %>%   top_n(n = 20) %>%   ggplot(aes(reorder(x = page_name, n), y = n)) +    geom_bar(stat=\"identity\") +    xlab(\"Page Name\") +    ylab(\"Count of Ads\") +    theme_bw() +    coord_flip()"},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"generating-persistent-tokens","dir":"Articles","previous_headings":"","what":"Generating Persistent Tokens","title":"","text":"may want generate persistent token allows avoid refresh token every hour. can use App ID App Secret generate persistent token works 60 days. important store secret securely. facilitate , ’ve included functionality keyring library. begin, run command: generate following prompt: ’ve already stored Application ID point, ’ll also receive prompt whether ’d like overwrite previously stored information. ’ll asked via prompt access input Application ID App Secret. can run adlib_set_longterm_token() command, follow prompts, store persistent access token within system’s credential store. long-term token stored, Radlibrary find automatically run adlib_get can also retrieve stored token time token_get().","code":"adlib_setup() Visit https://developers.facebook.com/ and navigate to your App's basic settings to find your Application ID and App Secret. These will be securely stored in your computer's credential store. Press <Enter> response <- adlib_get(query = query)"},{"path":"https://facebookresearch.github.io/Radlibrary/articles/Radlibrary.html","id":"pagination","dir":"Articles","previous_headings":"","what":"Pagination","title":"","text":"may want retrieve data available single API call. Radlibary package handles easy pagination implementation. example: versus","code":"query <- adlib_build_query(ad_reached_countries = 'US',                             ad_active_status = 'ALL',                             impression_condition = 'HAS_IMPRESSIONS_LIFETIME',                             search_terms = \"healthcare\",                            fields = \"ad_data\")     result <- adlib_get(query, token_get()) df <- as_tibble(result) dim(df) # [1] 1000   17 query <- adlib_build_query(ad_reached_countries = 'US',                             ad_active_status = 'ALL',                             search_terms = \"healthcare\",                            fields = \"ad_data\")  result_paginated <- adlib_get_paginated(query, max_gets = 10, token_get()) df_paginated <- as_tibble(result_paginated) dim(df_paginated) # [1] 10000    17"},{"path":"https://facebookresearch.github.io/Radlibrary/articles/nested_columns.html","id":"careful-about-combinatorial-explosion-with-unnesting","dir":"Articles","previous_headings":"","what":"Careful about combinatorial explosion with unnesting","title":"Nesting and Flattening","text":"Unnesting multiple nested columns time can create undesired combinatorial explosion. example, example, although three unique ad IDs, ’ve got 29 rows. ad fake123 shows twice, two publisher_platforms demographic_distribution; ad fake456 shows 26 times two publisher platforms 13 demographic categories; ad fake789 shows .","code":"data %>%    select(id, publisher_platforms, demographic_distribution) %>%    unnest(publisher_platforms, keep_empty = TRUE) %>%    unnest(demographic_distribution, keep_empty = TRUE) #> # A tibble: 29 × 5 #>    id      publisher_platforms percentage age   gender  #>    <chr>   <chr>                    <dbl> <chr> <chr>   #>  1 fake123 facebook              NA       NA    NA      #>  2 fake123 messenger             NA       NA    NA      #>  3 fake456 facebook               0.00220 35-44 unknown #>  4 fake456 facebook               0.00220 55-64 unknown #>  5 fake456 facebook               0.0264  35-44 female  #>  6 fake456 facebook               0.104   55-64 female  #>  7 fake456 facebook               0.00440 25-34 female  #>  8 fake456 facebook               0.0705  45-54 female  #>  9 fake456 facebook               0.163   55-64 male    #> 10 fake456 facebook               0.0374  25-34 male    #> # … with 19 more rows"},{"path":"https://facebookresearch.github.io/Radlibrary/articles/nested_columns.html","id":"documentation-of-all-field-types","dir":"Articles","previous_headings":"","what":"Documentation of all field types","title":"Nesting and Flattening","text":"full set available fields documented . general, fields type list<string> converted nested lists, responses type list<AudienceDistribution> converted nested tibbles.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/nested_columns.html","id":"flattened-columns","dir":"Articles","previous_headings":"","what":"Flattened columns","title":"Nesting and Flattening","text":"columns returned list containing min value max value. official API documentation called fields type InsightsRangeValue. Radlibrary flatten lower upper column. example, includes impressions field, flattened impressions_lower impressions_upper. general, InsightsRangeValue fields flattened columns named <field name>_lower <field name>_upper.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/articles/nested_columns.html","id":"dont-forget-you-still-have-the-raw-data","dir":"Articles","previous_headings":"","what":"Don’t forget, you still have the raw data","title":"Nesting and Flattening","text":"data returned Ads Library API kept response object. automatic transformations applied as_tibble aren’t ideal , can always go raw data process however like.","code":"response$data #> [[1]] #> [[1]]$id #> [1] \"fake123\" #>  #> [[1]]$publisher_platforms #> [[1]]$publisher_platforms[[1]] #> [1] \"facebook\" #>  #> [[1]]$publisher_platforms[[2]] #> [1] \"messenger\" #>  #>  #> [[1]]$impressions #> [[1]]$impressions$lower_bound #> [1] \"1000\" #>  #> [[1]]$impressions$upper_bound #> [1] \"4999\" #>  #>  #>  #> [[2]] #> [[2]]$id #> [1] \"fake456\" #>  #> [[2]]$publisher_platforms #> [[2]]$publisher_platforms[[1]] #> [1] \"facebook\" #>  #> [[2]]$publisher_platforms[[2]] #> [1] \"instagram\" #>  #>  #> [[2]]$demographic_distribution #> [[2]]$demographic_distribution[[1]] #> [[2]]$demographic_distribution[[1]]$percentage #> [1] \"0.002203\" #>  #> [[2]]$demographic_distribution[[1]]$age #> [1] \"35-44\" #>  #> [[2]]$demographic_distribution[[1]]$gender #> [1] \"unknown\" #>  #>  #> [[2]]$demographic_distribution[[2]] #> [[2]]$demographic_distribution[[2]]$percentage #> [1] \"0.002203\" #>  #> [[2]]$demographic_distribution[[2]]$age #> [1] \"55-64\" #>  #> [[2]]$demographic_distribution[[2]]$gender #> [1] \"unknown\" #>  #>  #> [[2]]$demographic_distribution[[3]] #> [[2]]$demographic_distribution[[3]]$percentage #> [1] \"0.026432\" #>  #> [[2]]$demographic_distribution[[3]]$age #> [1] \"35-44\" #>  #> [[2]]$demographic_distribution[[3]]$gender #> [1] \"female\" #>  #>  #> [[2]]$demographic_distribution[[4]] #> [[2]]$demographic_distribution[[4]]$percentage #> [1] \"0.103524\" #>  #> [[2]]$demographic_distribution[[4]]$age #> [1] \"55-64\" #>  #> [[2]]$demographic_distribution[[4]]$gender #> [1] \"female\" #>  #>  #> [[2]]$demographic_distribution[[5]] #> [[2]]$demographic_distribution[[5]]$percentage #> [1] \"0.004405\" #>  #> [[2]]$demographic_distribution[[5]]$age #> [1] \"25-34\" #>  #> [[2]]$demographic_distribution[[5]]$gender #> [1] \"female\" #>  #>  #> [[2]]$demographic_distribution[[6]] #> [[2]]$demographic_distribution[[6]]$percentage #> [1] \"0.070485\" #>  #> [[2]]$demographic_distribution[[6]]$age #> [1] \"45-54\" #>  #> [[2]]$demographic_distribution[[6]]$gender #> [1] \"female\" #>  #>  #> [[2]]$demographic_distribution[[7]] #> [[2]]$demographic_distribution[[7]]$percentage #> [1] \"0.162996\" #>  #> [[2]]$demographic_distribution[[7]]$age #> [1] \"55-64\" #>  #> [[2]]$demographic_distribution[[7]]$gender #> [1] \"male\" #>  #>  #> [[2]]$demographic_distribution[[8]] #> [[2]]$demographic_distribution[[8]]$percentage #> [1] \"0.037445\" #>  #> [[2]]$demographic_distribution[[8]]$age #> [1] \"25-34\" #>  #> [[2]]$demographic_distribution[[8]]$gender #> [1] \"male\" #>  #>  #> [[2]]$demographic_distribution[[9]] #> [[2]]$demographic_distribution[[9]]$percentage #> [1] \"0.072687\" #>  #> [[2]]$demographic_distribution[[9]]$age #> [1] \"35-44\" #>  #> [[2]]$demographic_distribution[[9]]$gender #> [1] \"male\" #>  #>  #> [[2]]$demographic_distribution[[10]] #> [[2]]$demographic_distribution[[10]]$percentage #> [1] \"0.220264\" #>  #> [[2]]$demographic_distribution[[10]]$age #> [1] \"65+\" #>  #> [[2]]$demographic_distribution[[10]]$gender #> [1] \"male\" #>  #>  #> [[2]]$demographic_distribution[[11]] #> [[2]]$demographic_distribution[[11]]$percentage #> [1] \"0.118943\" #>  #> [[2]]$demographic_distribution[[11]]$age #> [1] \"45-54\" #>  #> [[2]]$demographic_distribution[[11]]$gender #> [1] \"male\" #>  #>  #> [[2]]$demographic_distribution[[12]] #> [[2]]$demographic_distribution[[12]]$percentage #> [1] \"0.176211\" #>  #> [[2]]$demographic_distribution[[12]]$age #> [1] \"65+\" #>  #> [[2]]$demographic_distribution[[12]]$gender #> [1] \"female\" #>  #>  #> [[2]]$demographic_distribution[[13]] #> [[2]]$demographic_distribution[[13]]$percentage #> [1] \"0.002203\" #>  #> [[2]]$demographic_distribution[[13]]$age #> [1] \"65+\" #>  #> [[2]]$demographic_distribution[[13]]$gender #> [1] \"unknown\" #>  #>  #>  #> [[2]]$impressions #> [[2]]$impressions$lower_bound #> [1] \"0\" #>  #> [[2]]$impressions$upper_bound #> [1] \"999\" #>  #>  #>  #> [[3]] #> [[3]]$id #> [1] \"fake789\" #>  #> [[3]]$publisher_platforms #> [[3]]$publisher_platforms[[1]] #> [1] \"facebook\" #>  #>  #> [[3]]$impressions #> [[3]]$impressions$lower_bound #> [1] \"0\" #>  #> [[3]]$impressions$upper_bound #> [1] \"999\""},{"path":"https://facebookresearch.github.io/Radlibrary/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Colin Fraser. Author, maintainer. Kyle Shank. Author.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fraser C, Shank K (2022). Radlibrary: Facebook Ad Library API Tool. R package version 0.4.1, https://facebookresearch.github.io/Radlibrary/.","code":"@Manual{,   title = {Radlibrary: Facebook Ad Library API Tool},   author = {Colin Fraser and Kyle Shank},   year = {2022},   note = {R package version 0.4.1},   url = {https://facebookresearch.github.io/Radlibrary/}, }"},{"path":"https://facebookresearch.github.io/Radlibrary/index.html","id":"radlibrary","dir":"","previous_headings":"","what":"Facebook Ad Library API Tool","title":"Facebook Ad Library API Tool","text":"Radlibrary package R package facilitate querying Facebook Ad Library Facebook Ad Library API. ’re looking details ads make Ad Library ’ve got experience using R, ’re right place.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Facebook Ad Library API Tool","text":"install directly Github, use devtools:","code":"devtools::install_github(\"facebookresearch/Radlibrary\")"},{"path":"https://facebookresearch.github.io/Radlibrary/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Facebook Ad Library API Tool","text":"Please see vignette(\"Radlibrary\") pkgdown site.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Facebook Ad Library API Tool","text":"Radlibrary licensed 3-Clause BSD License. See LICENSE.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Facebook Ad Library API Tool","text":"Please note ‘Radlibrary’ project released Contributor Code Conduct. contributing project, agree abide terms. See Contributing Radlibrary guide information contributing.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/Radlibrary-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Radlibrary: Facebook Ad Library API Tool — Radlibrary-package","title":"Radlibrary: Facebook Ad Library API Tool — Radlibrary-package","text":"Query Facebook Ads Library.","code":""},{"path":[]},{"path":"https://facebookresearch.github.io/Radlibrary/reference/Radlibrary-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Radlibrary: Facebook Ad Library API Tool — Radlibrary-package","text":"Maintainer: Colin Fraser colinfraser@fb.com Authors: Kyle Shank kylescotshank@fb.com","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_build_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an Ad Library Query — adlib_build_query","title":"Build an Ad Library Query — adlib_build_query","text":"build list can passed adlib_get. Visit https://developers.facebook.com/docs/marketing-api/reference/ads_archive/ full API documentation.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_build_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an Ad Library Query — adlib_build_query","text":"","code":"adlib_build_query(   ad_active_status = c(\"ALL\", \"ACTIVE\", \"INACTIVE\"),   ad_delivery_date_max = NULL,   ad_delivery_date_min = NULL,   ad_reached_countries,   ad_type = c(\"POLITICAL_AND_ISSUE_ADS\", \"HOUSING_ADS\", \"NEWS_ADS\",     \"UNCATEGORIZED_ADS\", \"ALL\"),   bylines = NULL,   delivery_by_region = NULL,   estimated_audience_size_max = NULL,   estimated_audience_size_min = NULL,   languages = NULL,   media_type = NULL,   publisher_platforms = NULL,   search_page_ids = NULL,   search_terms = NULL,   search_type = c(\"KEYWORD_UNORDERED\", \"KEYWORD_EXACT_PHRASE\"),   limit = 1000,   fields = \"ad_data\" )"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_build_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an Ad Library Query — adlib_build_query","text":"ad_active_status Status ads. One 'ACTIVE', 'INACTIVE', '' ad_delivery_date_max character. Search ads delivered date (inclusive) provide. date format YYYY-mm-dd. ad_delivery_date_min character. Search ads delivered date (inclusive) provide. date format YYYY-mm-dd. ad_reached_countries Vector ISO country codes. Facebook delivered ads countries. ad_type type ad. One '', 'POLITICAL_AND_ISSUE_ADS', 'HOUSING_ADS', 'NEWS_ADS', 'UNCATEGORIZED_ADS'. Currently 'POLITICAL_AND_ISSUE_ADS' supported. bylines Filter results ads paid disclaimer byline, political ads reference “immigration” paid “ACLU”. delivery_by_region Character vector region names. View ads region (state province) people live located saw . estimated_audience_size_max Search ads maximum estimated audience size. Must one range boundaries: 1000, 5000, 10000, 50000, 100000, 500000, 1000000, leave empty maximum boundary. estimated_audience_size_min Search ads minimum estimated audience size. Must one range boundaries: 100, 1000, 5000, 10000, 50000, 100000, 500000, 1000000. languages character vector languages ad appears media_type Search ads based whether contain specific type media image video. publisher_platforms platforms ads appeared. One \"FACEBOOK\", \"INSTAGRAM\", \"AUDIENCE_NETWORK\", \"MESSENGER\", \"WHATSAPP\". search_page_ids vector 10 page IDs search. search_terms search string. search_type type search use search_terms field. KEYWORD_EXACT_PHRASE return results contain exact match search term. Multiple search terms separated commas can used retrieve results contain exact match phrase. KEYWORD_UNORDERED return results contain word search term order. default set KEYWORD_UNORDERED. limit maximum number results return fields fields include response. See details values.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_build_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build an Ad Library Query — adlib_build_query","text":"list params","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_build_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build an Ad Library Query — adlib_build_query","text":"Preset groups fields can specified \"ad_data\",   \"demographic_data\", \"region_data\". Otherwise, can pick choose   fields. *required* field picking choosing id, since   unique identifier ad.  ad_data  ad_creation_time ad_creative_bodies ad_creative_link_captions ad_creative_link_descriptions ad_creative_link_titles ad_delivery_start_time ad_delivery_stop_time ad_snapshot_url bylines currency estimated_audience_size impressions languages page_id page_name publisher_platforms spend demographic_distribution delivery_by_region","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_clear_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear saved settings — adlib_clear_setup","title":"Clear saved settings — adlib_clear_setup","text":"clears saved token, app ID, app secret.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_clear_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear saved settings — adlib_clear_setup","text":"","code":"adlib_clear_setup()"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the Ad Library API — adlib_get","title":"Query the Ad Library API — adlib_get","text":"function sends request Ad Library API. `params` argument list built adlib_build_query(). `token` argument can short-term token pasted https://developers.facebook.com/tools/explorer/, long-term token stored password store. default look token password store.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the Ad Library API — adlib_get","text":"","code":"adlib_get(params, token = token_get())"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the Ad Library API — adlib_get","text":"params query built adlib_build_query token access_token.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the Ad Library API — adlib_get","text":"http response","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get_paginated.html","id":null,"dir":"Reference","previous_headings":"","what":"Paginated query to the ad library API — adlib_get_paginated","title":"Paginated query to the ad library API — adlib_get_paginated","text":"Paginated query ad library API","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get_paginated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paginated query to the ad library API — adlib_get_paginated","text":"","code":"adlib_get_paginated(query, max_gets = 100, token = token_get())"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get_paginated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paginated query to the ad library API — adlib_get_paginated","text":"query Ad Library query max_gets maximum number calls adlib_get generate token access_token","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_get_paginated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paginated query to the ad library API — adlib_get_paginated","text":"paginated_adlib_data_response object. response following attributes. responses - list individual responses has_next - boolean value indicating whether still   pages next_page - URL call next page responses","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_set_longterm_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set long term token — adlib_set_longterm_token","title":"Set long term token — adlib_set_longterm_token","text":"entered Application ID App secret, can obtain long-term token expire 60 days. stored operating system's secrets manager.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_set_longterm_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set long term token — adlib_set_longterm_token","text":"","code":"adlib_set_longterm_token()"},{"path":[]},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up application ID and app secret. — adlib_setup","title":"Set up application ID and app secret. — adlib_setup","text":"lets store application ID app secret securely system's credential store (using keyring package).","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up application ID and app secret. — adlib_setup","text":"","code":"adlib_setup()"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/adlib_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set up application ID and app secret. — adlib_setup","text":"application ID app secret used obtain long-term access token.","code":""},{"path":[]},{"path":"https://facebookresearch.github.io/Radlibrary/reference/as_tibble.adlib_data_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data response to tibble — as_tibble.adlib_data_response","title":"Convert a data response to tibble — as_tibble.adlib_data_response","text":"Convert data response tibble","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/as_tibble.adlib_data_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data response to tibble — as_tibble.adlib_data_response","text":"","code":"# S3 method for adlib_data_response as_tibble(x, censor_access_token = NULL, ...)"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/as_tibble.adlib_data_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data response to tibble — as_tibble.adlib_data_response","text":"x adlib_data_response object returned adlib_get censor_access_token access tokens censored? ... additional arguments pass conversion function","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/as_tibble.adlib_data_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data response to tibble — as_tibble.adlib_data_response","text":"tibble","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/as_tibble.paginated_adlib_data_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a paginated response into a tibble — as_tibble.paginated_adlib_data_response","title":"Convert a paginated response into a tibble — as_tibble.paginated_adlib_data_response","text":"Convert paginated response tibble","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/as_tibble.paginated_adlib_data_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a paginated response into a tibble — as_tibble.paginated_adlib_data_response","text":"","code":"# S3 method for paginated_adlib_data_response as_tibble(x, censor_access_token = NULL, ...)"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/as_tibble.paginated_adlib_data_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a paginated response into a tibble — as_tibble.paginated_adlib_data_response","text":"x paginated response returned adlib_get_paginated censor_access_token access tokens censored output? ... arguments passed as_tibble","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_api_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"API endpoints — graph_api_endpoint","title":"API endpoints — graph_api_endpoint","text":"API endpoints","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_api_endpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API endpoints — graph_api_endpoint","text":"","code":"graph_api_endpoint(api = c(\"ads_archive\", \"access_token\"), version = \"v5.0\")"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_api_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"API endpoints — graph_api_endpoint","text":"api API return end point . Currently two endpoints supported: \"ads_archive\", querying Ad Library, \"access_token\", requesting long-term access tokens. version version API use.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_api_endpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API endpoints — graph_api_endpoint","text":"endpoint URL","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get results from Facebook Ad library — graph_get","title":"Get results from Facebook Ad library — graph_get","text":"Get results Facebook Ad library","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get results from Facebook Ad library — graph_get","text":"","code":"graph_get(service, params, token = token_get())"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get results from Facebook Ad library — graph_get","text":"service graph API endpoint send request params list parameters build adlib_build_params token access token Facebook","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/graph_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get results from Facebook Ad library — graph_get","text":"raw response Facebook Ad library","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/n_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of records in a paginated response — n_records","title":"Number of records in a paginated response — n_records","text":"Number records paginated response","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/n_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of records in a paginated response — n_records","text":"","code":"n_records(x)"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/n_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of records in a paginated response — n_records","text":"x paginated data response","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/n_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of pages in a paginated response — n_responses","title":"Number of pages in a paginated response — n_responses","text":"Number pages paginated response","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/n_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of pages in a paginated response — n_responses","text":"","code":"n_responses(x)"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/n_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of pages in a paginated response — n_responses","text":"x paginated data response","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. tibble as_tibble","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/token_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete your stored token — token_delete","title":"Delete your stored token — token_delete","text":"Delete stored token","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/token_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete your stored token — token_delete","text":"","code":"token_delete()"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/token_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete your stored token — token_delete","text":"TRUE (invisibly) token deleted.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/token_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a stored access token — token_get","title":"Retrieve a stored access token — token_get","text":"Retrieve stored access token","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/reference/token_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a stored access token — token_get","text":"","code":"token_get()"},{"path":"https://facebookresearch.github.io/Radlibrary/reference/token_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a stored access token — token_get","text":"stored access token","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-041","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.4.1","title":"Radlibrary 0.4.1","text":"Fix documentation issues Update nested columns vignette","code":""},{"path":[]},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"new-fields-0-4-0","dir":"Changelog","previous_headings":"","what":"New Fields","title":"Radlibrary 0.4.0","text":"Ad Library API provides data used , now Radlibrary can handle . current fields supported, time include: id ad_creation_time ad_creative_bodies ad_creative_link_captions ad_creative_link_descriptions ad_creative_link_titles ad_delivery_start_time ad_delivery_stop_time ad_snapshot_url bylines currency estimated_audience_size impressions languages page_id page_name publisher_platforms spend demographic_distribution delivery_by_region","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"nested-columns-0-4-0","dir":"Changelog","previous_headings":"","what":"Nested Columns","title":"Radlibrary 0.4.0","text":"Ad Library API evolved return richer data fields may multi-valued. instance, publisher_platform field can contain multiple values: Facebook, Instagram, etc. Converting responses tibble now makes list columns. Similarly, values like demographic_distribution delivery_by_region return rich data. Previously, necessary request data separately geo_table demographic_table. Now values converted nested tibble columns. See vignette(\"nested_columns\") .","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"other-small-to-medium-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Other small-to-medium changes","title":"Radlibrary 0.4.0","text":"Ads now unique identifier simply called id. now favored unique identifier rather ad_snapshot_url, previously required field calls API. Converting data response tibble longer create whole bunch unused columns fields weren’t requested. fields requested included now.","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-030","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.3.0","title":"Radlibrary 0.3.0","text":"Added ability filter potential reach Added date filters Removed deprecated fields Bug fixes","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-025","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.2.5","title":"Radlibrary 0.2.5","text":"Fixed issue ad tables couldn’t created spend impressions requested Require ad_snapshot_url present queries","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-024","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.2.4","title":"Radlibrary 0.2.4","text":"Fixed getPass bug Rstudio server warn environment variables Linux fix typos docs","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-023","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.2.3","title":"Radlibrary 0.2.3","text":"improve docs pass rhub windows build check","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-022","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.2.2","title":"Radlibrary 0.2.2","text":"bug fixes table types vignette","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-021","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.2.1","title":"Radlibrary 0.2.1","text":"tests bugfixes improved documentation","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-020","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.2.0","title":"Radlibrary 0.2.0","text":"CI set passes API Requests set user agent Radlibrary Access tokens censored URLs default Spend Impressions columns numeric upper lower bounds Documentation Bug fixes","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-010","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.1.0","title":"Radlibrary 0.1.0","text":"Secrets stored securely keychain Requests return data_objects can converted tibbles Paginated API requests built bunch documentation","code":""},{"path":"https://facebookresearch.github.io/Radlibrary/news/index.html","id":"radlibrary-0009001","dir":"Changelog","previous_headings":"","what":"Radlibrary 0.0.0.9001","title":"Radlibrary 0.0.0.9001","text":"Added NEWS.md file track changes package.","code":""}]
